/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example

import app.cash.turbine.turbineScope
import kotlinx.coroutines.ExperimentalCoroutinesApi
import kotlinx.coroutines.test.runTest
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.DisplayName
import org.junit.jupiter.api.Test

@OptIn(ExperimentalCoroutinesApi::class)
class AppTest {

  @DisplayName("testing item emitted after delay - using turbine")
  @Test
  fun test1() = runTest {
    turbineScope {
      val app = App()
      val items = app.stateFlow.testIn(this)

      app.start()
      assertThat(items.awaitItem()).isEqualTo(0)
      assertThat(items.awaitItem()).isEqualTo(1)
      assertThat(items.awaitItem()).isEqualTo(10)
    }
  }

//  @DisplayName("testing item emitted after delay")
//  @Test
//  fun test1() = runTest {
//    val app = App()
//    val list = mutableListOf<Int>()
//
//    backgroundScope.launch {
//      app.myFlow().collect { list.add(it) }
//
//      runCurrent()
//      assertThat(list.size).isEqualTo(1)
//      assertThat(list[0]).isEqualTo(1)
//      advanceTimeBy((3.1).seconds)
//      assertThat(list.size).isEqualTo(2)
//      assertThat(list[0]).isEqualTo(10)
//    }
//  }
}
