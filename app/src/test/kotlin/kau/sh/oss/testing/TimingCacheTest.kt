/*
 * This source file was generated by the Gradle 'init' task
 */
package kau.sh.oss.testing

import kotlinx.coroutines.ExperimentalCoroutinesApi
import kotlinx.coroutines.test.runTest
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Disabled
import org.junit.jupiter.api.DisplayName
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.extension.RegisterExtension

@OptIn(ExperimentalCoroutinesApi::class)
class TimingCacheTest {

  @RegisterExtension
  val testRule = CoroutineTestRule()

  @DisplayName("adding an item should immediately put it in the cache")
  @Test
  fun test1() = runTest {
    val cacher = Cache(
        // this = TestScope => test will never end
        backgroundScope
    )
    cacher.put(1)
    assertThat(cacher.cache).containsExactly(1)
  }

  @DisplayName("every 5 seconds, an item added to cache, should move to extended cache")
  @Disabled
  @Test
  fun test2() = runTest {
  }

  @DisplayName("every 5 seconds, entire extended cache is cleared")
  @Disabled
  @Test
  fun test3() = runTest {
  }

  @DisplayName("if extended cache already has 5 items, drop oldest item, when adding new item")
  @Disabled
  @Test
  fun test4() = runTest {
  }

}

