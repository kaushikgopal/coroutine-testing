/*
 * This source file was generated by the Gradle 'init' task
 */
package kau.sh.oss.testing

import kotlinx.coroutines.ExperimentalCoroutinesApi
import kotlinx.coroutines.test.advanceTimeBy
import kotlinx.coroutines.test.runTest
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Disabled
import org.junit.jupiter.api.DisplayName
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.extension.RegisterExtension
import kotlin.time.Duration.Companion.seconds

@OptIn(ExperimentalCoroutinesApi::class)
class TimingCacheTest {

  @RegisterExtension
  val testRule = CoroutineTestRule()

  @DisplayName("adding an item should immediately put it in the cache")
  @Test
  fun test1() = runTest {
    val cacher = Cache(
         this // TestScope => test will never end
    )
    cacher.put(1)
    assertThat(cacher.cache).containsExactly(1)
  }

  @DisplayName("after adding an item, in 5 seconds it should move from cache to extended cache")
  @Test
  fun test2() = runTest {
    val cacher = Cache(backgroundScope)
    cacher.put(3)
    cacher.cache.contains(3)
    advanceTimeBy(6.seconds)
    cacher.extendedCache.contains(3)
  }

  @DisplayName("every 5 seconds, entire extended cache is cleared")
  @Test
  fun test3() = runTest {
    val cacher = Cache(backgroundScope)
    cacher.put(3)
    cacher.cache.contains(3)
    advanceTimeBy(6.seconds)
    cacher.extendedCache.contains(3)
    advanceTimeBy(6.seconds)
    assertThat(cacher.extendedCache).isEmpty()
  }

  @DisplayName("if extended cache already has 5 items, drop oldest item, when adding new item")
  @Test
  fun test4() = runTest {
    val cacher = Cache(backgroundScope)
    cacher.put(1)
    cacher.put(2)
    cacher.put(3)
    cacher.put(4)
    cacher.put(5)
    assertThat(cacher.cache.size).isEqualTo(5)

    cacher.put(6)
    assertThat(cacher.cache).contains(6, 5, 3, 4, 2)
    assertThat(cacher.extendedCache).contains(1)

    advanceTimeBy(6.seconds)
    assertThat(cacher.cache).isEmpty()
    assertThat(cacher.extendedCache).contains(6, 5, 3, 4, 2)
  }
}

