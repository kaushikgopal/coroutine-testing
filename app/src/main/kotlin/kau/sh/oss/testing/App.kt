/*
 * This source file was generated by the Gradle 'init' task
 */
package kau.sh.oss.testing

import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.Dispatchers
import kotlinx.coroutines.channels.Channel
import kotlinx.coroutines.delay
import kotlinx.coroutines.flow.consumeAsFlow
import kotlinx.coroutines.launch
import kotlin.time.Duration.Companion.seconds

class App(private val scope: CoroutineScope = CoroutineScope(Dispatchers.IO)) {

  val greeting: String = "Coroutine Testing examples - see tests"

  private val _channel = Channel<Int>()
  val flow = _channel.consumeAsFlow() // prob. receiveAsFlow()

  fun start() {
    scope.launch {
      _channel.send(1)
      delay(3.seconds)
      _channel.send(10)
    }
  }
}

fun main() {
  println(App().greeting)
}
